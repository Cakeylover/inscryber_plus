# This workflow lists all images in the cloudinary upload folder
# & deletes older ones.

# Runs every monday @ 9am
name: Cloudinary Cleanup

on:
  schedule:
    - cron: "0 9 * * MON"
  # Enables manual run from the Actions tab in GH
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # The "expression" body argument is built using the Cloudinary search API
      # It translates to "find images in the Inscryption/Uploads folder that are
      # more than an hour old"
      # https://cloudinary.com/documentation/search_api#expressions
      - name: Retrieve files in cloudinary
        id: cloudinaryRequest
        uses: fjogeleit/http-request-action@master
        with:
          url: https://api.cloudinary.com/v1_1/${{ secrets.CLOUDINARY_CLOUD_NAME }}/resources/search
          data: '{ "expression": "folder=Inscryption/Uploads AND uploaded_at<1h" }'
          method: "POST"
          username: ${{ secrets.CLOUDINARY_API_KEY }}
          password: ${{ secrets.CLOUDINARY_API_SECRET_KEY }}
      - name: Filter output with jq
        id: jq-filter
        run: echo ::set-output name=RESOURCES::$(echo ${{ toJSON(steps.cloudinaryRequest.outputs.response) }} | jq '.resources')
      - name: Log jq variable
        run: echo ${{ steps.jq-filter.outputs.RESOURCES }}
      - name: Log filtered variable
        run: echo ${{ steps.jq-filter.outputs.RESOURCES[0].public_id }}

      # - name: DEBUG raw cloudinary output
      #   run: echo ${{ steps.cloudinaryRequest.outputs.response }}
      # - name: DEBUG "resources" from response
      #   run: echo ${{ steps.cloudinaryRequest.outputs.response }}.resources
      # - name: DEBUG filtered files from cloudinary
      #   run: echo "Images are ${{ steps.cloudinaryRequest.outputs.response.resources.*.public_id }}"
